/*
 * Copyright (c) 2017 The Bacardi Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef {{name | snakecase | upper}}_BRIDGE_H_
#define {{name | snakecase | upper}}_BRIDGE_H_

#include <memory>
#include <napi.h>

#include "examples/{{name | snakecase}}.h"

class {{name}}Bridge : public Napi::ObjectWrap<{{name}}Bridge> {
 public:
  static void Init(Napi::Env env, Napi::Object exports);

  explicit {{name}}Bridge(const Napi::CallbackInfo& info);

  {% for member in members %}
  {% if member.is_static %}
  static
  {% endif -%}
  Napi::Value {{member.name | camelcase-}}(const Napi::CallbackInfo& info);
  {% endfor %}

 private:
  std::unique_ptr<{{name}}> impl_;
};

#endif  // {{name| snakecase | upper}}_BRIDGE_H_
